{"version":3,"sources":["/./src/app/app.component.html","/./src/app/block-view/block-view.component.html","/./src/app/blockchain-views/blockchain-views.component.html","/./src/app/create-data/create-data.component.html","/./src/app/data-table/data-table.component.html","/./src/app/pending-data/pending-data.component.html","/./src/app/settings/settings.component.html","/./src/$_lazy_route_resource lazy namespace object","/./src/app/app-routing.module.ts","/./src/app/app.component.scss","/./src/app/app.component.ts","/./src/app/app.module.ts","/./src/app/block-view/block-view.component.scss","/./src/app/block-view/block-view.component.ts","/./src/app/blockchain-views/blockchain-views.component.scss","/./src/app/blockchain-views/blockchain-views.component.ts","/./src/app/create-data/create-data.component.scss","/./src/app/create-data/create-data.component.ts","/./src/app/data-table/data-table.component.scss","/./src/app/data-table/data-table.component.ts","/./src/app/pending-data/pending-data.component.scss","/./src/app/pending-data/pending-data.component.ts","/./src/app/services/blockchain.service.ts","/./src/app/services/data.service.ts","/./src/app/settings/settings.component.scss","/./src/app/settings/settings.component.ts","/./src/assets/blockchain.js","/./src/environments/environment.ts","/./src/main.ts","/buffer (ignored)","/crypto (ignored)"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["module.exports = \"<nav class=\\\"navbar navbar-light\\\" style=\\\"background-color: #afdcfc;\\\">\\n  <a routerLink=\\\"/\\\" class=\\\"btn btn-outline-dark\\\">Blockchain Project</a>\\n\\n  <div>\\n    <button class=\\\"btn btn-outline-dark\\\" routerLink=\\\"/settings\\\">\\n      Settings\\n    </button>\\n    &nbsp;\\n    <button class=\\\"btn btn-outline-dark\\\" routerLink=\\\"/create-new\\\">\\n      New Data\\n    </button>\\n    &nbsp;\\n    <button class=\\\"btn btn-outline-dark\\\" routerLink=\\\"/pending\\\">\\n      Pending...\\n    </button>\\n  </div>\\n</nav>\\n\\n<router-outlet></router-outlet>\\n\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <h5 class=\\\"card-title\\\">\\n      Block\\n      <small class=\\\"text-muted\\\" *ngIf=\\\"block.previousHash == 0\\\"\\n        >(Genesis block)</small\\n      >\\n    </h5>\\n  </div>\\n\\n  <ul class=\\\"list-group list-group-flush\\\">\\n    <li class=\\\"list-group-item\\\">\\n      <span class=\\\"\\\">Hash</span>\\n      <br />\\n      <div\\n        class=\\\"text-truncate\\\"\\n        [style.color]=\\\"'#' + block.hash.substring(0, 6)\\\"\\n      >\\n        <small>{{ block.hash }}</small>\\n      </div>\\n\\n      <br />\\n      <span class=\\\"\\\">Hash of previous block</span>\\n      <br />\\n\\n      <div\\n        class=\\\"text-truncate\\\"\\n        [style.color]=\\\"'#' + block.previousHash.substring(0, 6)\\\"\\n      >\\n        <small>{{ block.previousHash }}</small>\\n      </div>\\n    </li>\\n\\n    <li class=\\\"list-group-item\\\">\\n      <span class=\\\"\\\">Nonce</span><br />\\n      <div class=\\\"text-truncate text-muted\\\">\\n        <small>{{ block.nonce }}</small>\\n      </div>\\n    </li>\\n\\n    <li class=\\\"list-group-item\\\">\\n      <span class=\\\"\\\">Timestamp</span><br />\\n      <div class=\\\"text-truncate text-muted\\\">\\n        <small>{{ block.timestamp }}</small>\\n      </div>\\n    </li>\\n  </ul>\\n\\n  <!-- <div class=\\\"card-body\\\"> -->\\n  <!-- <span class=\\\"card-link\\\" *ngIf=\\\"!blockHasTx()\\\">Block has no data</span> -->\\n  <!-- <span class=\\\"card-link\\\" *ngIf=\\\"blockHasTx()\\\">Contains {{block.data.length}} data</span> -->\\n  <!-- </div> -->\\n</div>\\n\"","module.exports = \"<div class=\\\"blockchain-body\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col col-lg\\\">\\n      <div class=\\\"container blocks-container\\\">\\n        <h1>Blocks on chain</h1>\\n        <p>Each block click to check the individual block</p>\\n        <app-block-view\\n          class=\\\"block-view\\\"\\n          *ngFor=\\\"let block of blocks\\\"\\n          [block]=\\\"block\\\"\\n          (click)=\\\"showData(block)\\\"\\n        >\\n        </app-block-view>\\n      </div>\\n\\n      <br />\\n      <br />\\n    </div>\\n    <div class=\\\"col col-lg\\\">\\n      <div class=\\\"container\\\">\\n        <h1>Data Table</h1>\\n        <app-data-table [metadata]=\\\"selectedBlock.data\\\"> </app-data-table>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Create new Data</h1>\\n  <br />\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"fromAddress\\\">From address</label>\\n    <input\\n      type=\\\"text\\\"\\n      class=\\\"form-control\\\"\\n      id=\\\"fromAddress\\\"\\n      [(ngModel)]=\\\"walletKey.publicKey\\\"\\n      disabled\\n    />\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"toAddress\\\">To address</label>\\n    <input\\n      type=\\\"text\\\"\\n      class=\\\"form-control\\\"\\n      id=\\\"toAddress\\\"\\n      [(ngModel)]=\\\"newDt.toAddress\\\"\\n    />\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"amount\\\">Amount</label>\\n    <input\\n      type=\\\"number\\\"\\n      class=\\\"form-control\\\"\\n      id=\\\"amount\\\"\\n      [(ngModel)]=\\\"newDt.amount\\\"\\n    />\\n  </div>\\n\\n  <button\\n    (click)=\\\"createData()\\\"\\n    type=\\\"submit\\\"\\n    class=\\\"btn btn-outline-dark\\\"\\n    routerLink=\\\"/pending\\\"\\n  >\\n    Sign & create Data\\n  </button>\\n</div>\\n\"","module.exports = \"<p *ngIf=\\\"metadata.length === 0\\\">there is no Metadata!</p>\\n\\n<table class=\\\"table table-hover table-striped\\\" *ngIf=\\\"metadata.length > 0\\\">\\n  <thead>\\n    <tr>\\n      <th scope=\\\"col\\\">#</th>\\n      <th scope=\\\"col\\\">From</th>\\n      <th scope=\\\"col\\\">To</th>\\n      <th scope=\\\"col\\\">Amount</th>\\n      <th scope=\\\"col\\\">Timestamp</th>\\n      <th scope=\\\"col\\\">Valid?</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let tx of metadata; index as index\\\">\\n      <td>{{ index }}</td>\\n      <td class=\\\"text-truncate\\\" style=\\\"max-width: 100px;\\\">\\n        {{ tx.fromAddress }}\\n\\n        <span *ngIf=\\\"tx.fromAddress === null\\\">System</span>\\n      </td>\\n      <td class=\\\"text-truncate\\\" style=\\\"max-width: 100px;\\\">\\n        {{ tx.toAddress }}\\n      </td>\\n      <td>\\n        {{ tx.amount }}\\n        <span *ngIf=\\\"tx.fromAddress === null\\\" class=\\\"text-muted\\\"\\n          ><br /><small>(Block reward)</small></span\\n        >\\n      </td>\\n      <td>\\n        {{ tx.timestamp }}<br />\\n        <span class=\\\"text-muted\\\"\\n          ><small>{{ tx.timestamp | date: 'MMM d, y, h:mm:ss a' }}</small></span\\n        >\\n      </td>\\n      <td style=\\\"max-width: 40px;\\\">\\n        <span *ngIf=\\\"tx.isValid()\\\">✓</span>\\n        <span *ngIf=\\\"!tx.isValid()\\\">✗</span>\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Pending Data</h1>\\n  <app-data-table [metadata]=\\\"pendingData\\\"></app-data-table>\\n\\n  <button\\n    class=\\\"btn btn-outline-dark\\\"\\n    (click)=\\\"minePendingData()\\\"\\n    routerLink=\\\"/\\\"\\n    *ngIf=\\\"pendingData.length > 0\\\"\\n  >\\n    Start Mining\\n  </button>\\n</div>\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Settings</h1>\\n\\n  <br />\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"difficulty\\\">Difficulty</label>\\n    <input\\n      id=\\\"difficulty\\\"\\n      type=\\\"number\\\"\\n      class=\\\"form-control\\\"\\n      [(ngModel)]=\\\"blockchain.difficulty\\\"\\n    />\\n    <p>\\n      <small class=\\\"text-secondary\\\"\\n        >Using a difficulty above > 4 is going to considerably slow the the\\n        production of blocks</small\\n      >\\n    </p>\\n  </div>\\n  <br />\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"mining-reward\\\">Mining Reward</label>\\n    <input\\n      type=\\\"number\\\"\\n      id=\\\"mining-reward\\\"\\n      class=\\\"form-control\\\"\\n      [(ngModel)]=\\\"blockchain.miningReward\\\"\\n    />\\n  </div>\\n</div>\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BlockchainViewsComponent } from './blockchain-views/blockchain-views.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { CreateDataComponent } from './create-data/create-data.component';\nimport { PendingDataComponent } from './pending-data/pending-data.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BlockchainViewsComponent\n  },\n  {\n    path: 'settings',\n    component: SettingsComponent\n  },\n  {\n    path: 'create-new',\n    component: CreateDataComponent\n  },\n  {\n    path: 'pending',\n    component: PendingDataComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'blockchain-angular';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BlockchainViewsComponent } from './blockchain-views/blockchain-views.component';\nimport { BlockViewComponent } from './block-view/block-view.component';\nimport { DataTableComponent } from './data-table/data-table.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { CreateDataComponent } from './create-data/create-data.component';\nimport { PendingDataComponent } from './pending-data/pending-data.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BlockchainViewsComponent,\n    BlockViewComponent,\n    DataTableComponent,\n    SettingsComponent,\n    CreateDataComponent,\n    PendingDataComponent\n  ],\n  imports: [BrowserModule, AppRoutingModule, FormsModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","module.exports = \".card {\\n  width: 500px;\\n  margin: 20px auto;\\n  padding: 20px;\\n  background-color: #eefcff;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNib29rL0Rlc2t0b3AvYmxvY2tjaGFpbi1hbmd1bGFyL3NyYy9hcHAvYmxvY2stdmlldy9ibG9jay12aWV3LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9ibG9jay12aWV3L2Jsb2NrLXZpZXcuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFBO0VBQ0EsaUJBQUE7RUFDQSxhQUFBO0VBQ0EseUJBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL2Jsb2NrLXZpZXcvYmxvY2stdmlldy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkIHtcbiAgd2lkdGg6IDUwMHB4O1xuICBtYXJnaW46IDIwcHggYXV0bztcbiAgcGFkZGluZzogMjBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIzOCwgMjUyLCAyNTUpO1xufVxuIiwiLmNhcmQge1xuICB3aWR0aDogNTAwcHg7XG4gIG1hcmdpbjogMjBweCBhdXRvO1xuICBwYWRkaW5nOiAyMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVmY2ZmO1xufSJdfQ== */\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-block-view',\n  templateUrl: './block-view.component.html',\n  styleUrls: ['./block-view.component.scss']\n})\nexport class BlockViewComponent implements OnInit {\n  @Input() public block;\n  public isClicked: boolean = false;\n\n  constructor() {\n    setTimeout(() => {\n      console.log('from block-view component => ', this.block);\n    }, 2000);\n  }\n\n  handleClick() {\n    this.isClicked = !this.isClicked;\n  }\n\n  ngOnInit() {}\n}\n","module.exports = \".blockchain-body {\\n  margin-bottom: 100px;\\n}\\n\\n.blocks-container {\\n  text-align: center;\\n}\\n\\nh1 {\\n  padding: 20px 0;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNib29rL0Rlc2t0b3AvYmxvY2tjaGFpbi1hbmd1bGFyL3NyYy9hcHAvYmxvY2tjaGFpbi12aWV3cy9ibG9ja2NoYWluLXZpZXdzLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9ibG9ja2NoYWluLXZpZXdzL2Jsb2NrY2hhaW4tdmlld3MuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxvQkFBQTtBQ0NGOztBRENBO0VBQ0Usa0JBQUE7QUNFRjs7QURBQTtFQUNFLGVBQUE7RUFDQSxrQkFBQTtBQ0dGIiwiZmlsZSI6InNyYy9hcHAvYmxvY2tjaGFpbi12aWV3cy9ibG9ja2NoYWluLXZpZXdzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJsb2NrY2hhaW4tYm9keSB7XG4gIG1hcmdpbi1ib3R0b206IDEwMHB4O1xufVxuLmJsb2Nrcy1jb250YWluZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5oMSB7XG4gIHBhZGRpbmc6IDIwcHggMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuIiwiLmJsb2NrY2hhaW4tYm9keSB7XG4gIG1hcmdpbi1ib3R0b206IDEwMHB4O1xufVxuXG4uYmxvY2tzLWNvbnRhaW5lciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuaDEge1xuICBwYWRkaW5nOiAyMHB4IDA7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { BlockchainService } from '../services/blockchain.service';\n\n@Component({\n  selector: 'app-blockchain-views',\n  templateUrl: './blockchain-views.component.html',\n  styleUrls: ['./blockchain-views.component.scss']\n})\nexport class BlockchainViewsComponent implements OnInit {\n  public blocks = [];\n  public selectedBlock = null;\n\n  constructor(public blockchainService: BlockchainService) {\n    this.blocks = blockchainService.getBlocks();\n    this.selectedBlock = this.blocks[0];\n  }\n\n  ngOnInit() {}\n\n  showData(block) {\n    this.selectedBlock = block;\n  }\n}\n","module.exports = \"h1 {\\n  padding: 20px 0;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNib29rL0Rlc2t0b3AvYmxvY2tjaGFpbi1hbmd1bGFyL3NyYy9hcHAvY3JlYXRlLWRhdGEvY3JlYXRlLWRhdGEuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2NyZWF0ZS1kYXRhL2NyZWF0ZS1kYXRhLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBQTtFQUNBLGtCQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9jcmVhdGUtZGF0YS9jcmVhdGUtZGF0YS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImgxIHtcbiAgcGFkZGluZzogMjBweCAwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4iLCJoMSB7XG4gIHBhZGRpbmc6IDIwcHggMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { BlockchainService } from '../services/blockchain.service';\nimport { DataService } from '../services/data.service';\n\n@Component({\n  selector: 'app-create-data',\n  templateUrl: './create-data.component.html',\n  styleUrls: ['./create-data.component.scss']\n})\nexport class CreateDataComponent implements OnInit {\n  public newDt;\n  public walletKey;\n\n  constructor(\n    private blockchainService: BlockchainService,\n    private dataService: DataService\n  ) {\n    this.walletKey = blockchainService.walletKeys[0];\n    this.newDt = dataService.dataInstance;\n  }\n\n  ngOnInit() {}\n\n  createData() {\n    this.newDt.fromAddress = this.walletKey.publicKey;\n    this.newDt.signData(this.walletKey.keyObj);\n    this.blockchainService.addData(this.newDt);\n    this.newDt = this.dataService.dataInstance;\n    console.log('create-data component: New data ===> ', this.newDt);\n    console.log(\n      'create-data component: Validation ===> ',\n      this.newDt.isValid()\n    );\n    console.log('create-data component: Wallet key ===> ', this.walletKey);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RhdGEtdGFibGUvZGF0YS10YWJsZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { BlockchainService } from '../services/blockchain.service';\n\n@Component({\n  selector: 'app-data-table',\n  templateUrl: './data-table.component.html',\n  styleUrls: ['./data-table.component.scss']\n})\nexport class DataTableComponent implements OnInit {\n  @Input() public metadata: [] = [];\n\n  constructor(public blockchainService: BlockchainService) {}\n\n  ngOnInit() {\n    setTimeout(() => {\n      console.log('metadata from data-table component => ', this.metadata);\n    }, 2000);\n  }\n}\n","module.exports = \"h1 {\\n  padding: 20px 0;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNib29rL0Rlc2t0b3AvYmxvY2tjaGFpbi1hbmd1bGFyL3NyYy9hcHAvcGVuZGluZy1kYXRhL3BlbmRpbmctZGF0YS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGVuZGluZy1kYXRhL3BlbmRpbmctZGF0YS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQUE7RUFDQSxrQkFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvcGVuZGluZy1kYXRhL3BlbmRpbmctZGF0YS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImgxIHtcbiAgcGFkZGluZzogMjBweCAwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4iLCJoMSB7XG4gIHBhZGRpbmc6IDIwcHggMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { BlockchainService } from '../services/blockchain.service';\n\n@Component({\n  selector: 'app-pending-data',\n  templateUrl: './pending-data.component.html',\n  styleUrls: ['./pending-data.component.scss']\n})\nexport class PendingDataComponent implements OnInit {\n  public pendingData = [];\n\n  constructor(private blockchainService: BlockchainService) {\n    this.pendingData = blockchainService.getPendingData();\n  }\n\n  ngOnInit() {}\n\n  minePendingData() {\n    this.blockchainService.minePendingData();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Blockchain } from '../../assets/blockchain.js';\nimport { ec as EC } from 'elliptic';\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlockchainService {\n  public blockchainInstance = new Blockchain();\n  public walletKeys = [];\n\n  constructor() {\n    this.blockchainInstance.difficulty = 1;\n    this.blockchainInstance.minePendingData('my-wallet-address');\n\n    this.generateWalletKeys();\n  }\n\n  getBlocks() {\n    return this.blockchainInstance.chain;\n  }\n\n  addData(dt) {\n    this.blockchainInstance.addData(dt);\n  }\n\n  getPendingData() {\n    return this.blockchainInstance.pendingData;\n  }\n\n  minePendingData() {\n    this.blockchainInstance.minePendingData(this.walletKeys[0].publicKey);\n  }\n\n  private generateWalletKeys() {\n    const ec = new EC('secp256k1');\n    const key = ec.genKeyPair();\n\n    this.walletKeys.push({\n      keyObj: key,\n      publicKey: key.getPublic('hex'),\n      privateKey: key.getPrivate('hex')\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Data } from '../../assets/blockchain.js';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  public dataInstance = new Data();\n  constructor() {\n    this.dataInstance = this.dataInstance;\n  }\n}\n","module.exports = \"h1 {\\n  padding: 20px 0;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWNib29rL0Rlc2t0b3AvYmxvY2tjaGFpbi1hbmd1bGFyL3NyYy9hcHAvc2V0dGluZ3Mvc2V0dGluZ3MuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3NldHRpbmdzL3NldHRpbmdzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBQTtFQUNBLGtCQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9zZXR0aW5ncy9zZXR0aW5ncy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImgxIHtcbiAgcGFkZGluZzogMjBweCAwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4iLCJoMSB7XG4gIHBhZGRpbmc6IDIwcHggMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { BlockchainService } from '../services/blockchain.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n  public blockchain;\n  constructor(private blockchainService: BlockchainService) {\n    this.blockchain = blockchainService.blockchainInstance;\n  }\n\n  ngOnInit() {}\n}\n","const SHA256 = require('crypto-js/sha256');\nconst EC = require('elliptic').ec;\nconst ec = new EC('secp256k1');\n\nclass Data {\n  constructor(fromAddress, toAddress, amount) {\n    (this.fromAddress = fromAddress),\n      (this.toAddress = toAddress),\n      (this.amount = amount);\n    this.timestamp = Date.now();\n  }\n  calculateHash() {\n    return SHA256(this.fromAddress + this.toAddress + this.amount).toString();\n  }\n  signData(signingKey) {\n    if (signingKey.getPublic('hex') !== this.fromAddress) {\n      throw new Error('forbidden');\n    }\n    const hashDATA = this.calculateHash();\n    const sig = signingKey.sign(hashDATA, 'base64');\n    this.signature = sig.toDER('hex');\n    console.log('this is the signature ..................... ', sig);\n  }\n\n  isValid() {\n    if (this.fromAddress === null) return true;\n    if (!this.signature || this.signature.length === 0) {\n      throw new Error('no signature');\n    }\n    const publicKey = ec.keyFromPublic(this.fromAddress, 'hex');\n    return publicKey.verify(this.calculateHash(), this.signature);\n  }\n}\n\nclass Block {\n  constructor(timestamp, data, previousHash = '') {\n    (this.timestamp = timestamp),\n      (this.data = data),\n      (this.previousHash = previousHash),\n      (this.hash = this.calculateHash()),\n      (this.nonce = 0);\n  }\n  calculateHash() {\n    return SHA256(\n      this.previousHash +\n        this.timestamp +\n        JSON.stringify(this.data) +\n        this.nonce\n    ).toString();\n  }\n  mineBlock(difficulty) {\n    while (\n      this.hash.substring(0, difficulty) !== Array(difficulty + 1).join('0')\n    ) {\n      this.nonce++;\n      this.hash = this.calculateHash();\n    }\n    console.log('Block Mined: ' + this.hash);\n  }\n\n  hasValidData() {\n    for (const dt of this.data) {\n      if (!dt.isValid()) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nclass Blockchain {\n  constructor() {\n    this.chain = [this.createGenesisBlock()];\n    this.difficulty = 4;\n    this.pendingData = [];\n    this.miningReward = 100;\n  }\n\n  createGenesisBlock() {\n    return new Block(Date.now(), [], '0');\n  }\n\n  getLatestBlock() {\n    return this.chain[this.chain.length - 1];\n  }\n\n  minePendingData(mineRewardAddress) {\n    const rewardData = new Data(null, mineRewardAddress, this.miningReward);\n    this.pendingData.push(rewardData);\n\n    let block = new Block(\n      Date.now(),\n      this.pendingData,\n      this.getLatestBlock().hash\n    );\n    block.mineBlock(this.difficulty);\n\n    // console.log('Block successfully mined!');\n    this.chain.push(block);\n\n    this.pendingData = [];\n  }\n\n  addData(data) {\n    if (!data.fromAddress || !data.toAddress) {\n      throw new Error('Data must include from to address');\n    }\n    if (!data.isValid()) {\n      throw new Error('invalid block');\n    }\n    if (data.amount <= 0) {\n      throw new Error('amount should be higher than 0');\n    }\n\n    this.pendingData.push(data);\n  }\n\n  getBalanceOfAddress(address) {\n    let balance = 0;\n\n    for (const block of this.chain) {\n      for (const dt of block.data) {\n        if (dt.fromAddress === address) {\n          balance -= dt.amount;\n        }\n        if (dt.toAddress === address) {\n          balance += dt.amount;\n        }\n      }\n    }\n    return balance;\n  }\n\n  isChainValid() {\n    for (let i = 1; i < this.chain.length; i++) {\n      const currentBlock = this.chain[i];\n      const previousBlock = this.chain[i - 1];\n\n      if (!currentBlock.hasValidData()) {\n        return false;\n      }\n\n      if (currentBlock.hash !== currentBlock.calculateHash()) {\n        return false;\n      }\n      if (currentBlock.previousHash !== previousBlock.hash) {\n        return false;\n      }\n      return true;\n    }\n  }\n}\n\nmodule.exports.Blockchain = Blockchain;\nmodule.exports.Block = Block;\nmodule.exports.Data = Data;\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}